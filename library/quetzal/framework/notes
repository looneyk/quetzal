
Windows::Foundation::Size is float based, same scale, just more precision; consider changing


minimized
maximized
sizeable
movable?


window is created hidden and explicitly shown when ready

Window window(...);
Renderer renderer(window);
window.create_x();
renderer.create();
window.show();


Window
allow for expanded and slidable


framework::Application
direct3d11::Application : public framework::Application
xxx::Application : public direct3d11::Application


framework namespace or just quetzal?
position and size unsigned?
decide on pos or position for consistency


window closing allowing for confirmation to cancel
serialization needs to be handled by Window itself or a friend
store everything between mode changes if they are not kept updated continuously
may need to expose all fields for window_proc anyway?

expanded, largest window with the given aspect ratio that fits within screen
expanded position ranges from 0 to 1 representing the minimum and maximum positions in the open dimension

floating is the only moveable window mode? expanded with border?
floating without border need to be moved in other ways. same with expanded?


position and size templates
see what I already have ...
absolute floats ok, but relative have different semantics


set/release mouse capture in Window, probably not useful except in modal gui


WM_INPUT instead of DirectInput, especially for mouse

   1. use Window messages to detect keypresses, and track the array of pressed keys yourself.
   2. watch for the WM_ACTIVATE message and use GetAsyncKeyboardState at that point to 'fix' the array to match the actual state.


public interface not windows specific for extension to other os
